{"version":3,"sources":["webpack:///naf-uws-adapter.min.js","webpack:///webpack/bootstrap 231c78197e9a2d7c6198","webpack:///./src/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","UwsAdapter","this","window","location","app","room","connectedClients","roomOccupantListener","serverTimeRequests","timeOffsets","avgTimeOffset","value","wsUrl","appName","roomName","options","successListener","failureListener","connectSuccess","connectFailure","occupantListener","openListener","closedListener","messageListener","_this","clientSentTime","Date","now","fetch","document","href","method","cache","then","res","serverReceivedTime","headers","getTime","precision","clientReceivedTime","serverTime","timeOffset","push","reduce","acc","offset","setTimeout","updateTimeOffset","protocol","host","socket","WebSocket","self","addEventListener","event","sendJoinRoom","message","JSON","parse","data","type","receivedOccupants","occupants","clientId","id","from","msgData","dataType","_send","occupantMap","NAF","index","indexOf","splice","adapters","IS_CONNECTED","NOT_CONNECTED","sendPacket","sendData","broadcastPacket","broadcastData","close","packet","packetStr","stringify","send","register"],"mappings":"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","file":"naf-uws-adapter.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * uWebSockets Adapter\r\n * For use with uws-server.js\r\n * networked-scene: serverURL needs to be ws://localhost:8080 when running locally\r\n */\nvar UwsAdapter = function () {\n  function UwsAdapter() {\n    _classCallCheck(this, UwsAdapter);\n\n    var location = window.location;\n\n    this.app = \"default\";\n    this.room = \"default\";\n    this.connectedClients = [];\n    this.roomOccupantListener = null;\n\n    this.serverTimeRequests = 0;\n    this.timeOffsets = [];\n    this.avgTimeOffset = 0;\n  }\n\n  _createClass(UwsAdapter, [{\n    key: \"setServerUrl\",\n    value: function setServerUrl(wsUrl) {\n      this.wsUrl = wsUrl;\n    }\n  }, {\n    key: \"setApp\",\n    value: function setApp(appName) {\n      this.app = appName;\n    }\n  }, {\n    key: \"setRoom\",\n    value: function setRoom(roomName) {\n      this.room = roomName;\n    }\n  }, {\n    key: \"setWebRtcOptions\",\n    value: function setWebRtcOptions(options) {\n      // No webrtc support\n    }\n  }, {\n    key: \"setServerConnectListeners\",\n    value: function setServerConnectListeners(successListener, failureListener) {\n      this.connectSuccess = successListener;\n      this.connectFailure = failureListener;\n    }\n  }, {\n    key: \"setRoomOccupantListener\",\n    value: function setRoomOccupantListener(occupantListener) {\n      this.roomOccupantListener = occupantListener;\n    }\n  }, {\n    key: \"setDataChannelListeners\",\n    value: function setDataChannelListeners(openListener, closedListener, messageListener) {\n      this.openListener = openListener;\n      this.closedListener = closedListener;\n      this.messageListener = messageListener;\n    }\n  }, {\n    key: \"updateTimeOffset\",\n    value: function updateTimeOffset() {\n      var _this = this;\n\n      var clientSentTime = Date.now() + this.avgTimeOffset;\n\n      return fetch(document.location.href, { method: \"HEAD\", cache: \"no-cache\" }).then(function (res) {\n        var precision = 1000;\n        var serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + precision / 2;\n        var clientReceivedTime = Date.now();\n        var serverTime = serverReceivedTime + (clientReceivedTime - clientSentTime) / 2;\n        var timeOffset = serverTime - clientReceivedTime;\n\n        _this.serverTimeRequests++;\n\n        if (_this.serverTimeRequests <= 10) {\n          _this.timeOffsets.push(timeOffset);\n        } else {\n          _this.timeOffsets[_this.serverTimeRequests % 10] = timeOffset;\n        }\n\n        _this.avgTimeOffset = _this.timeOffsets.reduce(function (acc, offset) {\n          return acc += offset;\n        }, 0) / _this.timeOffsets.length;\n\n        if (_this.serverTimeRequests > 10) {\n          setTimeout(function () {\n            return _this.updateTimeOffset();\n          }, 5 * 60 * 1000); // Sync clock every 5 minutes.\n        } else {\n          _this.updateTimeOffset();\n        }\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (!this.wsUrl || this.wsUrl === \"/\") {\n        if (location.protocol === \"https:\") {\n          this.wsUrl = \"wss://\" + location.host;\n        } else {\n          this.wsUrl = \"ws://\" + location.host;\n        }\n      }\n\n      this.updateTimeOffset();\n\n      var socket = new WebSocket(this.wsUrl);\n      var self = this;\n\n      // WebSocket connection opened\n      socket.addEventListener(\"open\", function (event) {\n        self.sendJoinRoom();\n      });\n\n      // WebSocket connection error\n      socket.addEventListener(\"error\", function (event) {\n        self.connectFailure();\n      });\n\n      // Listen for messages\n      socket.addEventListener(\"message\", function (event) {\n        // console.log('Message from server', event.data);\n\n        var message = JSON.parse(event.data);\n\n        if (message.type === \"roomOccupantsChange\") {\n          self.receivedOccupants(message.data.occupants);\n        } else if (message.type === \"connectSuccess\") {\n          var data = message.data;\n          var clientId = data.id;\n          self.connectSuccess(clientId);\n        } else if (message.type == \"send\" || message.type == \"broadcast\") {\n          var from = message.from;\n          var msgData = message.data;\n\n          var dataType = msgData.type;\n          var data = msgData.data;\n          self.messageListener(from, dataType, data);\n        }\n      });\n\n      this.socket = socket;\n    }\n  }, {\n    key: \"sendJoinRoom\",\n    value: function sendJoinRoom() {\n      this._send(\"joinRoom\", { room: this.room });\n    }\n  }, {\n    key: \"receivedOccupants\",\n    value: function receivedOccupants(occupants) {\n      var occupantMap = {};\n      for (var i = 0; i < occupants.length; i++) {\n        if (occupants[i] != NAF.clientId) {\n          occupantMap[occupants[i]] = true;\n        }\n      }\n      this.roomOccupantListener(occupantMap);\n    }\n  }, {\n    key: \"shouldStartConnectionTo\",\n    value: function shouldStartConnectionTo(clientId) {\n      return true;\n    }\n  }, {\n    key: \"startStreamConnection\",\n    value: function startStreamConnection(clientId) {\n      this.connectedClients.push(clientId);\n      this.openListener(clientId);\n    }\n  }, {\n    key: \"closeStreamConnection\",\n    value: function closeStreamConnection(clientId) {\n      var index = this.connectedClients.indexOf(clientId);\n      if (index > -1) {\n        this.connectedClients.splice(index, 1);\n      }\n      this.closedListener(clientId);\n    }\n  }, {\n    key: \"getConnectStatus\",\n    value: function getConnectStatus(clientId) {\n      var connected = this.connectedClients.indexOf(clientId) != -1;\n\n      if (connected) {\n        return NAF.adapters.IS_CONNECTED;\n      } else {\n        return NAF.adapters.NOT_CONNECTED;\n      }\n    }\n  }, {\n    key: \"sendData\",\n    value: function sendData(clientId, dataType, data) {\n      // console.log('sending data', dataType, data);\n      var sendPacket = {\n        target: clientId,\n        type: dataType,\n        data: data\n      };\n      this._send(\"send\", sendPacket);\n    }\n  }, {\n    key: \"sendDataGuaranteed\",\n    value: function sendDataGuaranteed(clientId, dataType, data) {\n      this.sendData(clientId, dataType, data);\n    }\n  }, {\n    key: \"broadcastData\",\n    value: function broadcastData(dataType, data) {\n      var broadcastPacket = {\n        type: dataType,\n        data: data\n      };\n      this._send(\"broadcast\", broadcastPacket);\n    }\n  }, {\n    key: \"broadcastDataGuaranteed\",\n    value: function broadcastDataGuaranteed(dataType, data) {\n      this.broadcastData(dataType, data);\n    }\n  }, {\n    key: \"getServerTime\",\n    value: function getServerTime() {\n      return Date.now() + this.avgTimeOffset;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.close();\n    }\n  }, {\n    key: \"_send\",\n    value: function _send(dataType, data) {\n      var packet = {\n        from: NAF.clientId,\n        type: dataType,\n        data: data\n      };\n      var packetStr = JSON.stringify(packet);\n      this.socket.send(packetStr);\n    }\n  }]);\n\n  return UwsAdapter;\n}();\n\nNAF.adapters.register(\"uws\", UwsAdapter);\n\nmodule.exports = UwsAdapter;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// naf-uws-adapter.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 231c78197e9a2d7c6198","/**\r\n * uWebSockets Adapter\r\n * For use with uws-server.js\r\n * networked-scene: serverURL needs to be ws://localhost:8080 when running locally\r\n */\r\nclass UwsAdapter {\r\n  constructor() {\r\n    var location = window.location;\r\n\r\n    this.app = \"default\";\r\n    this.room = \"default\";\r\n    this.connectedClients = [];\r\n    this.roomOccupantListener = null;\r\n\r\n    this.serverTimeRequests = 0;\r\n    this.timeOffsets = [];\r\n    this.avgTimeOffset = 0;\r\n  }\r\n\r\n  setServerUrl(wsUrl) {\r\n    this.wsUrl = wsUrl;\r\n  }\r\n\r\n  setApp(appName) {\r\n    this.app = appName;\r\n  }\r\n\r\n  setRoom(roomName) {\r\n    this.room = roomName;\r\n  }\r\n\r\n  setWebRtcOptions(options) {\r\n    // No webrtc support\r\n  }\r\n\r\n  setServerConnectListeners(successListener, failureListener) {\r\n    this.connectSuccess = successListener;\r\n    this.connectFailure = failureListener;\r\n  }\r\n\r\n  setRoomOccupantListener(occupantListener) {\r\n    this.roomOccupantListener = occupantListener;\r\n  }\r\n\r\n  setDataChannelListeners(openListener, closedListener, messageListener) {\r\n    this.openListener = openListener;\r\n    this.closedListener = closedListener;\r\n    this.messageListener = messageListener;\r\n  }\r\n\r\n  updateTimeOffset() {\r\n    const clientSentTime = Date.now() + this.avgTimeOffset;\r\n\r\n    return fetch(document.location.href, { method: \"HEAD\", cache: \"no-cache\" })\r\n      .then(res => {\r\n        var precision = 1000;\r\n        var serverReceivedTime = new Date(res.headers.get(\"Date\")).getTime() + (precision / 2);\r\n        var clientReceivedTime = Date.now();\r\n        var serverTime = serverReceivedTime + ((clientReceivedTime - clientSentTime) / 2);\r\n        var timeOffset = serverTime - clientReceivedTime;\r\n\r\n        this.serverTimeRequests++;\r\n\r\n        if (this.serverTimeRequests <= 10) {\r\n          this.timeOffsets.push(timeOffset);\r\n        } else {\r\n          this.timeOffsets[this.serverTimeRequests % 10] = timeOffset;\r\n        }\r\n\r\n        this.avgTimeOffset = this.timeOffsets.reduce((acc, offset) => acc += offset, 0) / this.timeOffsets.length;\r\n\r\n        if (this.serverTimeRequests > 10) {\r\n          setTimeout(() => this.updateTimeOffset(), 5 * 60 * 1000); // Sync clock every 5 minutes.\r\n        } else {\r\n          this.updateTimeOffset();\r\n        }\r\n      });\r\n  }\r\n\r\n  connect() {\r\n    if (!this.wsUrl || this.wsUrl === \"/\") {\r\n      if (location.protocol === \"https:\") {\r\n        this.wsUrl = \"wss://\" + location.host;\r\n      } else {\r\n        this.wsUrl = \"ws://\" + location.host;\r\n      }\r\n    }\r\n\r\n    this.updateTimeOffset();\r\n\r\n    var socket = new WebSocket(this.wsUrl);\r\n    var self = this;\r\n\r\n    // WebSocket connection opened\r\n    socket.addEventListener(\"open\", function(event) {\r\n      self.sendJoinRoom();\r\n    });\r\n\r\n    // WebSocket connection error\r\n    socket.addEventListener(\"error\", function(event) {\r\n      self.connectFailure();\r\n    });\r\n\r\n    // Listen for messages\r\n    socket.addEventListener(\"message\", function(event) {\r\n      // console.log('Message from server', event.data);\r\n\r\n      var message = JSON.parse(event.data);\r\n\r\n      if (message.type === \"roomOccupantsChange\") {\r\n        self.receivedOccupants(message.data.occupants);\r\n      } else if (message.type === \"connectSuccess\") {\r\n        var data = message.data;\r\n        var clientId = data.id;\r\n        self.connectSuccess(clientId);\r\n      } else if (message.type == \"send\" || message.type == \"broadcast\") {\r\n        var from = message.from;\r\n        var msgData = message.data;\r\n\r\n        var dataType = msgData.type;\r\n        var data = msgData.data;\r\n        self.messageListener(from, dataType, data);\r\n      }\r\n    });\r\n\r\n    this.socket = socket;\r\n  }\r\n\r\n  sendJoinRoom() {\r\n    this._send(\"joinRoom\", { room: this.room });\r\n  }\r\n\r\n  receivedOccupants(occupants) {\r\n    var occupantMap = {};\r\n    for (var i = 0; i < occupants.length; i++) {\r\n      if (occupants[i] != NAF.clientId) {\r\n        occupantMap[occupants[i]] = true;\r\n      }\r\n    }\r\n    this.roomOccupantListener(occupantMap);\r\n  }\r\n\r\n  shouldStartConnectionTo(clientId) {\r\n    return true;\r\n  }\r\n\r\n  startStreamConnection(clientId) {\r\n    this.connectedClients.push(clientId);\r\n    this.openListener(clientId);\r\n  }\r\n\r\n  closeStreamConnection(clientId) {\r\n    var index = this.connectedClients.indexOf(clientId);\r\n    if (index > -1) {\r\n      this.connectedClients.splice(index, 1);\r\n    }\r\n    this.closedListener(clientId);\r\n  }\r\n\r\n  getConnectStatus(clientId) {\r\n    var connected = this.connectedClients.indexOf(clientId) != -1;\r\n\r\n    if (connected) {\r\n      return NAF.adapters.IS_CONNECTED;\r\n    } else {\r\n      return NAF.adapters.NOT_CONNECTED;\r\n    }\r\n  }\r\n\r\n  sendData(clientId, dataType, data) {\r\n    // console.log('sending data', dataType, data);\r\n    var sendPacket = {\r\n      target: clientId,\r\n      type: dataType,\r\n      data: data\r\n    };\r\n    this._send(\"send\", sendPacket);\r\n  }\r\n\r\n  sendDataGuaranteed(clientId, dataType, data) {\r\n    this.sendData(clientId, dataType, data);\r\n  }\r\n\r\n  broadcastData(dataType, data) {\r\n    var broadcastPacket = {\r\n      type: dataType,\r\n      data: data\r\n    };\r\n    this._send(\"broadcast\", broadcastPacket);\r\n  }\r\n\r\n  broadcastDataGuaranteed(dataType, data) {\r\n    this.broadcastData(dataType, data);\r\n  }\r\n\r\n  getServerTime() {\r\n    return Date.now() + this.avgTimeOffset;\r\n  }\r\n\r\n  disconnect() {\r\n    this.socket.close();\r\n  }\r\n\r\n  _send(dataType, data) {\r\n    var packet = {\r\n      from: NAF.clientId,\r\n      type: dataType,\r\n      data: data\r\n    };\r\n    var packetStr = JSON.stringify(packet);\r\n    this.socket.send(packetStr);\r\n  }\r\n}\r\n\r\nNAF.adapters.register(\"uws\", UwsAdapter);\r\n\r\nmodule.exports = UwsAdapter;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}