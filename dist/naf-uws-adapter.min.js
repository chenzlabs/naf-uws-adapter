(function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)})([function(a){'use strict';function b(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}var c=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),d=function(){function a(){b(this,a);window.location;this.app='default',this.room='default',this.connectedClients=[],this.roomOccupantListener=null}return c(a,[{key:'setServerUrl',value:function(a){this.wsUrl=a}},{key:'setApp',value:function(a){this.app=a}},{key:'setRoom',value:function(a){this.room=a}},{key:'setWebRtcOptions',value:function(){}},{key:'setServerConnectListeners',value:function(a,b){this.connectSuccess=a,this.connectFailure=b}},{key:'setRoomOccupantListener',value:function(a){this.roomOccupantListener=a}},{key:'setDataChannelListeners',value:function(a,b,c){this.openListener=a,this.closedListener=b,this.messageListener=c}},{key:'connect',value:function(){this.wsUrl&&'/'!==this.wsUrl||('https:'===location.protocol?this.wsUrl='wss://'+location.host:this.wsUrl='ws://'+location.host);var a=new WebSocket(this.wsUrl),b=this;a.addEventListener('open',function(){b.sendJoinRoom()}),a.addEventListener('error',function(){b.connectFailure()}),a.addEventListener('message',function(a){var c=JSON.parse(a.data);if('roomOccupantsChange'===c.type)b.receivedOccupants(c.data.occupants);else if('connectSuccess'===c.type){var d=c.data,e=d.id;b.connectSuccess(e)}else if('send'==c.type||'broadcast'==c.type){var f=c.from,g=c.data,h=g.type,d=g.data;b.messageListener(f,h,d)}}),this.socket=a}},{key:'sendJoinRoom',value:function(){this._send('joinRoom',{room:this.room})}},{key:'receivedOccupants',value:function(a){for(var b={},c=0;c<a.length;c++)a[c]!=NAF.clientId&&(b[a[c]]=!0);this.roomOccupantListener(b)}},{key:'shouldStartConnectionTo',value:function(){return!0}},{key:'startStreamConnection',value:function(a){this.connectedClients.push(a),this.openListener(a)}},{key:'closeStreamConnection',value:function(a){var b=this.connectedClients.indexOf(a);-1<b&&this.connectedClients.splice(b,1),this.closedListener(a)}},{key:'getConnectStatus',value:function(a){var b=-1!=this.connectedClients.indexOf(a);return b?NAF.adapters.IS_CONNECTED:NAF.adapters.NOT_CONNECTED}},{key:'sendData',value:function(a,b,c){this._send('send',{target:a,type:b,data:c})}},{key:'sendDataGuaranteed',value:function(a,b,c){this.sendData(a,b,c)}},{key:'broadcastData',value:function(a,b){this._send('broadcast',{type:a,data:b})}},{key:'broadcastDataGuaranteed',value:function(a,b){this.broadcastData(a,b)}},{key:'_send',value:function(a,b){var c={from:NAF.clientId,type:a,data:b},d=JSON.stringify(c);this.socket.send(d)}}]),a}();NAF.adapters.register('uws',d),a.exports=d}]);
//# sourceMappingURL=naf-uws-adapter.min.js.map